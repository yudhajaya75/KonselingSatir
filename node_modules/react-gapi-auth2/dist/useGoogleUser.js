"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useGoogleUser = void 0;
var react_1 = require("react");
var GApiProvider_1 = require("./GApiProvider");
var useGoogleAuth_1 = require("./useGoogleAuth");
/**
 * A declarative wrapper around the `GoogleUser` object described here {@link https://developers.google.com/identity/sign-in/web/reference#users}. This automatically listens for changes to the `currentUser`
 * and updates the return value.
 *
 */
var useGoogleUser = function () {
    var _a;
    var gApiError = (GApiProvider_1.useGApiContext() || {}).error;
    var _b = useGoogleAuth_1.useGoogleAuth(), googleAuth = _b.googleAuth, googleAuthError = _b.error;
    var _c = react_1.useState(((_a = googleAuth === null || googleAuth === void 0 ? void 0 : googleAuth.currentUser) === null || _a === void 0 ? void 0 : _a.get()) || null), currentUser = _c[0], setCurrentUser = _c[1];
    var _d = react_1.useState(null), error = _d[0], setError = _d[1];
    // Listen for changes in `currentUser`.
    react_1.useEffect(function () {
        if (googleAuth) {
            try {
                googleAuth.currentUser.listen(function (user) { return setCurrentUser(user); });
            }
            catch (e) {
                setError(e);
            }
        }
    }, [googleAuth]);
    return {
        error: gApiError || googleAuthError || error,
        currentUser: currentUser,
    };
};
exports.useGoogleUser = useGoogleUser;
