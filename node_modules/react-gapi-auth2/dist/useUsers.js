"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useUsers = void 0;
var react_1 = require("react");
var GoogleAuthProvider_1 = require("./GoogleAuthProvider");
var useUsers = function () {
    var _a, _b;
    var context = GoogleAuthProvider_1.useGoogleAuthContext();
    var _c = react_1.useState(((_b = (_a = context === null || context === void 0 ? void 0 : context.googleAuth) === null || _a === void 0 ? void 0 : _a.currentUser) === null || _b === void 0 ? void 0 : _b.get()) || null), currentUser = _c[0], setCurrentUser = _c[1];
    if (!context) {
        throw Error("react-gapi-auth2:: Must use `useUsers` inside of `GoogleAuthProvider`");
    }
    // Listen for changes in the current user's sign-in state.
    react_1.useEffect(function () {
        var _a;
        (_a = context.googleAuth) === null || _a === void 0 ? void 0 : _a.currentUser.listen(setCurrentUser);
    }, [context.googleAuth]);
    return {
        errors: context.errors,
        currentUser: currentUser,
        id: currentUser === null || currentUser === void 0 ? void 0 : currentUser.getId(),
        isSignedIn: currentUser === null || currentUser === void 0 ? void 0 : currentUser.isSignedIn(),
        hostedDomain: currentUser === null || currentUser === void 0 ? void 0 : currentUser.getHostedDomain(),
        grantedScopes: currentUser === null || currentUser === void 0 ? void 0 : currentUser.getGrantedScopes(),
        basicProfile: currentUser === null || currentUser === void 0 ? void 0 : currentUser.getBasicProfile(),
        getAuthResponse: currentUser === null || currentUser === void 0 ? void 0 : currentUser.getAuthResponse.bind(currentUser),
        reloadAuthResponse: currentUser === null || currentUser === void 0 ? void 0 : currentUser.reloadAuthResponse.bind(currentUser),
        hasGrantedScopes: currentUser === null || currentUser === void 0 ? void 0 : currentUser.hasGrantedScopes.bind(currentUser),
        grant: currentUser === null || currentUser === void 0 ? void 0 : currentUser.grant.bind(currentUser),
        grantOfflineAccess: currentUser === null || currentUser === void 0 ? void 0 : currentUser.grantOfflineAccess.bind(currentUser),
        disconnect: currentUser === null || currentUser === void 0 ? void 0 : currentUser.disconnect.bind(currentUser),
    };
};
exports.useUsers = useUsers;
