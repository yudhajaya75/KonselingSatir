"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthProvider = void 0;
var react_1 = __importStar(require("react"));
var GOOGLE_API_PLATFORM_LIBRARY = 'https://apis.google.com/js/platform.js';
var AuthContext = react_1.createContext(null);
var AuthProvider = function (_a) {
    var children = _a.children;
    var _b = react_1.useState(false), isPlatformLoaded = _b[0], setIsPlatformLoaded = _b[1];
    var _c = react_1.useState(false), isAuth2Loaded = _c[0], setIsAuth2Loaded = _c[1];
    var _d = react_1.useState(null), googleAuth = _d[0], setGoogleAuth = _d[1];
    var _e = react_1.useState(null), error = _e[0], setError = _e[1];
    // Load the Google APIs platform library to create the `gapi` object
    react_1.useEffect(function () {
        if (window.gapi) {
            setIsPlatformLoaded(true);
        }
        else {
            var script_1 = document.createElement('script');
            script_1.src = GOOGLE_API_PLATFORM_LIBRARY;
            script_1.async = true;
            script_1.defer = true;
            var handleLoad_1 = function () { return setIsPlatformLoaded(true); };
            var handleError_1 = function (e) {
                setError(new Error("react-gapi-auth2: Error loading Google APIs platform \n" + e.message));
            };
            script_1.addEventListener('load', handleLoad_1);
            script_1.addEventListener('error', handleError_1);
            document.body.appendChild(script_1);
            return function () {
                script_1.removeEventListener('load', handleLoad_1);
                script_1.removeEventListener('error', handleError_1);
            };
        }
    }, []);
    // After the platform library loads, load the `auth2` library
    react_1.useEffect(function () {
        window.gapi.load('auth2', {
            callback: function () { return setIsAuth2Loaded(true); },
            onerror: function () { return setError(new Error('react-gapi-auth2: Error loading auth2 library')); }
        });
    }, [isPlatformLoaded]);
    var value = {
        isAuth2Loaded: isAuth2Loaded,
        googleAuth: googleAuth,
        error: error,
        setGoogleAuth: setGoogleAuth
    };
    return (react_1.default.createElement(AuthContext.Provider, { value: value }, children));
};
exports.AuthProvider = AuthProvider;
